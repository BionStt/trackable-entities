Trackable Entities To Do

Release v2.0: Apr-2014

Deploy: Update All Samples
DONE:
- api controller t4
  > all samples
  > vs project templates
- Repository.cs -> Fix Delete + Async
- WebApi.Patterns
  > Sample
  > vs project templates
  
NEXT:
- VS 2012 Samples, vs proj templates
  > WCF sample, vs templates

TODO:
1) Get sample working w v2
   - Client using new MergeChanges API
   - Service controllers using ApplyChanges, LoadRelatedEntities
     > Replace Customer controller
   - Update controller scaffolding
     > Order: POST, PUT, DELETE
   - Add code for M-1, 1-1, M-M
   - Replace in all samples and vs project templates   
   
   - Samples:
     VS 2013
     - WebApi
     - WebApi.Patterns* - next
     - Wcf
     VS 2012
     - WebApi
     - Wcf

* DONE: Overload for async methods accepting cancellation token

* TODO: Refactor LoadRelatedEntities
  - condition: if state == added load entity
   
   
2) Update Patterns and WCF samples
   - Operations use ApplyChanges, LoadRelatedEntities
   - Update project templates   
   - Replace in all samples and vs project templates
   
3) VS2013 Update 2 RC
   - Make VM snapshot
   - Install Web Essentials update
   - Test everything
   
4) Patterns
   - Move Mappings into .EF project (done)
     > Add step in Getting Started guide
   - Update controller actions
   - Update controller item template
     
5) VSIX
  > NuGet Packages
  > Templates
  > Remove EF Power Tools dependency
    - Keep NuGet dependency
  > VS2012: Delete Models and Mapping folders
  > BUG: Delete asm in item template reflection code
  > BUG: Solution ReadMe file in:
    %ProgramFiles%\Microsoft Visual Studio 12.0\Common7\IDE\PrivateAssemblies
  > Update ReadMe files
  > Release Notes
  
DOCS:
- Getting Started Guides
- Migrationg from v1.x
  > Update Nuget packages to v2
  > Regenerate client and service entities (via EF rev eng db command)
  > Replace obsolete MergeChanges in client app

DONE:

- NorthwindSlim:
  > Script new tables and data
  > Include with Samples
  > Post to ts.com

- CT Coll:
  > Rename T to TEntity
  > Throw exception if entity is not IEquatable<TEntity>
    - MergeChanges
  > Add xml doc for Arg Exception on MergeChanges

- Client T4 templates
  > M-M prop setter: if (value != null) value.Parent = this;
  > Add M-1 ref props, change tracker
  > Add 1-1 change tracker prop
  > Explicitly implement IEquatable<T>
    - Make private EntityIdentifer serializable
      - Json, DataContract
  > Replace == with value.Equals
    - Use ReferenceEquals for ref props
  > Replicate to all samples and vs project templates

- Server T4 templates
  > Mapping.tt: using System.ComponentModel.DataAnnotations.Schema;
  > Add private EntityIdentifer
    - Make serializable for Json, DataContract
  > Replicate to all samples and vs project templates

Release 2.1:

- Create integration tests with SpecFlow
  > Test T4 templates
  > Test Serialization, Equatability
  > Test LoadRelatedEntities
  > Test MergeChanges
  
Testing data:

unchanged terr id:      "01581"
modified terr id:       "01730" c
added existing terr id: "02116" c
added new terr id:      "91360" c
deleted terr id:        "01833" c

